# This is a pipeline template for doing NGS barcoding, going from demultiplexed sequence data to 
# individual sequences per sample. See the Wiki for more details on these steps and the concepts
# behind them - this document should act as a reference only.

# See the metabarcoding pipeline if you need to do demultiplexing

# A command for running trimming on paired files in a loop. Assumes _R[12].fq. Make sure to check directory names and insert any project names into the for loop to ensure you don't run on anyone else's files. -g is forward, -G is reverse primer

mkdir 1_trimmed
samples=$(for f in 0_demux/*.fastq.gz; do s1=${f##*/}; echo ${s1%_*}; done | sort | uniq)
mkdir 1_trimmed
for s in $samples; do cutadapt -j 20 -g CCNGAYATRGCNTTYCCNCG -G TANACYTCNGGRTGNCCRAARAAYCA -o 1_trimmed/${s}_R1.fastq -p 1_trimmed/${s}_R2.fastq --discard-untrimmed 0_demux/${s}_R1.fastq.gz 0_demux/${s}_R2.fastq.gz 2>&1 | tee -a trim_report.txt; done

# Running merging
samples=$(for f in 1_trimmed/*.fastq; do s1=${f##*/}; echo ${s1%_*}; done | sort | uniq)
mkdir 2_merged
for s in $samples; do pear -f 1_trimmed/${s}_R1.fastq -r 1_trimmed/${s}_R2.fastq -o 2_merged/$s -q 26 -v 60 -j 20 2>&1 | tee -a merge_report.txt; done
cd 2_merged/
rm *discarded* *unassembled* 
rename -e "s/assembled\.//" *
cd ../

# Quality filter
mkdir 3_filtered
samples=$(for f in 2_merged/*.fastq; do s1=${f##*/}; echo ${s1%.fastq}; done | sort | uniq)
for s in $samples; do vsearch --fastx_filter 2_merged/$s.fastq --fastq_maxee 1 --fastaout 3_filtered/$s.fasta 2>&1 | tee -a qualfilter_report.txt ; done


# Then run NAPselect on the files in 3_filtered
# If you want to run on multiple different blasttargets:
# 1. create a tab-separated table with the first column your sequence names and the second the taxon to use
# 2. where this file is called taxon.tsv, run this:
cut -f2 taxon.tsv | sort | uniq | while read t; do files=$(grep $t taxon.tsv | cut -f1 | while read f; do echo "3_filtered/$f.fasta"; done); NAPselect -threads 30 -seqlength 418 -out 4_barcodes/ -blastpath /db/blastdb-2019-10-21/nt -blasttarget $t -verbose $files; done
